#!/usr/bin/env python

import getopt
import sys
import os
import subprocess

slaptget = '/usr/sbin/slapt-get'
slaptsrc = '/usr/bin/slapt-src'

def main(argv):
	try:
		opts, args = getopt.getopt(argv, "hu", ["help", "update"])
		
		for opt, arg in opts:
			if opt in ("-h", "--help"):
				usage()
				sys.exit(0)
			elif opt in ("-u", "--update"):
				retval = update()
				sys.exit(retval)
		if not len(args) > 0:
			usage()
			sys.exit(0)
		search(args)

	except getopt.GetoptError:
		usage()
		sys.exit(2)

def search(args):
	print "Packages available through slapt-get/gslapt:"
	cmd = [slaptget, '--search']
	for arg in args:
		cmd.append(arg)
	p = subprocess.Popen(cmd)
	p.wait()
	print "\nPackages available through slapt-src/sourcery:"
	cmd = [slaptsrc, '--search']
	for arg in args:
		cmd.append(arg)
	p = subprocess.Popen(cmd)
	p.wait()

def update():
	print "Updating slapt-get cache..."
	p = subprocess.Popen([slaptget, '--update'])
	retval = p.wait()
	if retval != 0:
		print "\nUpdating slapt-src cache..."
		p = subprocess.Popen([slaptsrc, '--update'])
		retval = p.wait()
	return retval

def slaptsrcdeps(pkglist):
	deps = []
	DEVNULL = open('/dev/null', 'w')
	for pkg in pkglist:
		args1 = ['yes', 'n']
		p1 = subprocess.Popen(args1, stdout=subprocess.PIPE, stderr=DEVNULL)
		args2 = [slaptsrc, '-i', pkg]
		env = dict()
		for i in initial_env:
			env[i] = initial_env[i]
		env['LANG'] = 'C'
		p2 = subprocess.Popen(args2, stdin=p1.stdout, stdout=subprocess.PIPE, stderr=DEVNULL,env=env)
		p1.stdout.close()
		output = p2.communicate()[0]
		found = False
		data = ''
		for line in output.splitlines():
			if line.startswith('The following dependent slackbuilds'):
				found = True
				continue
			if found is True:
				if line.startswith('Do you want to continue'):
					break
				else:
					data = ' '.join([data, line])
		newdeps = data.replace('\n', ' ').strip(' ').split(' ')
		for i in newdeps:
			if i is not '' and i != '%README%':
				if i not in deps:
					deps.append(i)
	DEVNULL.close()
	return deps

def usage():
	print 'USAGE:', os.path.basename(sys.argv[0]),'[OPTIONS] [STRING(s)]'
	print
	print 'OPTIONS:'
	print '   -u, --update       update slapt-get and slapt-src caches'
	print '   -h, --help         this help message'


if __name__ == "__main__":
	main(sys.argv[1:])
